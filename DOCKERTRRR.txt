
Docker


What is Docker and why it is used?

Docker is a software platform that allows you to build, test, and deploy applications quickly. 
Docker packages software into standardized units called containers that have everything the software needs to run
including libraries, system tools, code, and runtime.



Software devolopement platform to deploy apps
Apps are packaed in container so they can run in any OS
they can run the same regardless of where they run
Docker images -file used to execute code in docker container
Repositories - Place where the docker images are stored ( Docker hub, AWS ECR, etc)



AWS ECS
Elastic container service -two types
1) EC2 launch type -you must provision and maitain infra
2) Fargate lauch type -you do not provision the infra (no ec2 instance to manage)
3)can attach loadbalancer to manage
4) cab


Dockercommand
docker build -t image_name:tag                      - Build an image from a Dockerfile
docker images                                        - List all docker images
docker rmi image_name:tag                           -  Remove an image
docker pull image_name:tag                          -  Pull an image from Docker Hub
docker run -d --name container_name image_name:tag  - docker run -d --name container_name image_name:tag
docker ps                                           - List all running containers
docker ps -a                                        -  List all containers (including stopped ones)
docker stop container_id_or_name                    -  docker stop container_id_or_name
docker start container_id_or_name                   -  Start a stopped container
Restart a container                                 - docker restart container_id_or_name
Remove a container                                  - docker rm container_id_or_name
Access the terminal of a running container          - docker exec -it container_id_or_name /bin/bash
 docker network ls                               - List all networks 
docker network inspect network_name              - Inspect a network
docker volume ls                                 - List all volumes
docker volume inspect volume_name                - Inspect a volume
Run containers defined in a Docker Compose file  - docker-compose up -d
Stop containers defined in a Docker Compose file - docker-compose down
List containers managed by Docker Compose          -docker-compose ps


How the Application Runs:
When you run a container using the final image, it includes everything needed to run the application:

The Nginx server (from the Nginx base image) is responsible for serving the static files generated by the build process.
The Node.js runtime and development dependencies are not included in the final image. They were 
only needed during the build process to generate the production artifacts.
In summary, even though development tools and dependencies are not included in the final image, 
the application can still run because the necessary runtime artifacts are copied into the
final image during the multi-stage build process. This approach results in smaller, more efficient Docker images suitable for production use.




       
                                    









 

                                          

  


   

    


    

